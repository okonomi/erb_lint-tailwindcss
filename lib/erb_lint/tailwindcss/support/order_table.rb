# frozen_string_literal: true

# AUTO-GENERATED FILE - DO NOT EDIT MANUALLY
# Generated by scripts/extract_order.mjs from prettier-plugin-tailwindcss
# Generation time: 2025-08-10T13:46:59.056Z

module ERBLint
  module Tailwindcss
    module Support
      # Order table containing Tailwind CSS class ordering rules
      # Generated from prettier-plugin-tailwindcss to ensure compatibility
      class OrderTable
        # Class order patterns with weights (lower number = earlier in sort order)
        TAILWIND_CLASS_ORDER = {
          /^(block|inline|flex|grid|table|hidden|contents)/ => 0, # layout,
          /^(static|fixed|absolute|relative|sticky)/ => 100, # position,
          /^(inset|top|right|bottom|left)-/ => 110, # insets,
          /^(invisible|visible)/ => 200, # visibility,
          /^(flex|grid|place|justify|items|content|self|order)/ => 300, # flexbox,
          /^[pm][trblxy]?-/ => 400, # spacing,
          /^(w|h|min-w|min-h|max-w|max-h)-/ => 500, # sizing,
          /^(font|text|leading|tracking|decoration)/ => 600, # typography,
          /^bg-/ => 700, # backgrounds,
          /^(border|rounded)/ => 800, # borders,
          /^(shadow|opacity|mix|filter)/ => 900 # effects
        }.freeze

        # Variant order rules (e.g., hover:, sm:, dark:)
        VARIANT_ORDER = {
          "hover" => 1,
          "focus" => 1,
          "active" => 2,
          "disabled" => 3,
          "sm" => 4,
          "md" => 5,
          "lg" => 6,
          "xl" => 7,
          "2xl" => 8,
          "dark" => 9
        }.freeze

        # Individual class weights for exact matching
        CLASS_WEIGHTS = {
          "m-0" => 0,
          "m-1" => 1,
          "m-2" => 2,
          "m-3" => 3,
          "m-4" => 4,
          "m-5" => 5,
          "m-6" => 6,
          "m-8" => 7,
          "m-auto" => 8,
          "mx-0" => 9,
          "mx-1" => 10,
          "mx-2" => 11,
          "mx-4" => 12,
          "mx-auto" => 13,
          "my-0" => 14,
          "my-1" => 15,
          "my-2" => 16,
          "my-4" => 17,
          "my-auto" => 18,
          "mb-0" => 19,
          "mb-1" => 20,
          "mb-2" => 21,
          "mb-4" => 22,
          "ml-0" => 23,
          "ml-1" => 24,
          "ml-2" => 25,
          "ml-4" => 26,
          "mr-0" => 27,
          "mr-1" => 28,
          "mr-2" => 29,
          "mr-4" => 30,
          "mt-0" => 31,
          "mt-1" => 32,
          "mt-2" => 33,
          "mt-4" => 34,
          "!block" => 35,
          "block" => 36,
          "!inline-block" => 37,
          "inline-block" => 38,
          "!inline" => 39,
          "inline" => 40,
          "!flex" => 41,
          "flex" => 42,
          "!inline-flex" => 43,
          "inline-flex" => 44,
          "!table" => 45,
          "table" => 46,
          "!inline-table" => 47,
          "inline-table" => 48,
          "!table-caption" => 49,
          "table-caption" => 50,
          "!table-cell" => 51,
          "table-cell" => 52,
          "!table-column" => 53,
          "table-column" => 54,
          "table-column-group" => 55,
          "table-footer-group" => 56,
          "table-header-group" => 57,
          "table-row-group" => 58,
          "table-row" => 59,
          "flow-root" => 60,
          "grid" => 61,
          "inline-grid" => 62,
          "contents" => 63,
          "list-item" => 64,
          "hidden" => 65,
          "h-0" => 66,
          "h-1" => 67,
          "h-10" => 68,
          "h-12" => 69,
          "h-16" => 70,
          "h-2" => 71,
          "h-20" => 72,
          "h-24" => 73,
          "h-3" => 74,
          "h-4" => 75,
          "h-5" => 76,
          "h-6" => 77,
          "h-8" => 78,
          "h-auto" => 79,
          "h-fit" => 80,
          "h-full" => 81,
          "h-max" => 82,
          "h-min" => 83,
          "h-screen" => 84,
          "w-0" => 85,
          "w-1" => 86,
          "w-1/2" => 87,
          "w-1/3" => 88,
          "w-1/4" => 89,
          "w-10" => 90,
          "w-12" => 91,
          "w-16" => 92,
          "w-2" => 93,
          "w-2/3" => 94,
          "w-2/4" => 95,
          "w-20" => 96,
          "w-24" => 97,
          "w-3" => 98,
          "w-3/4" => 99
          # ... and 278 more classes
        }.freeze

        class << self
          # Gets the sort weight for a given class
          # @param class_name [String] The class name to analyze
          # @return [Integer] Sort weight (lower numbers come first)
          def get_class_weight(class_name)
            # First try exact match
            return CLASS_WEIGHTS[class_name] if CLASS_WEIGHTS[class_name]

            # Then try pattern matching
            TAILWIND_CLASS_ORDER.each do |pattern, weight|
              return weight if class_name.match?(pattern)
            end

            # Default weight for unknown classes (sort alphabetically at end)
            10_000 + (class_name.hash.abs % 1000)
          end

          # Gets the sort weight for variant prefixes
          # @param variant [String] The variant name (without colon)
          # @return [Integer] Sort weight for the variant
          def get_variant_weight(variant)
            VARIANT_ORDER.fetch(variant, 10_000)
          end

          # Load order data from JSON (for future extensibility)
          def load_order_data(order_data)
            # This method allows for dynamic loading of order data
            # Implementation can be extended for custom configurations
          end
        end
      end
    end
  end
end
